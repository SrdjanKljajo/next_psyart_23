/* eslint-disable @next/next/no-sync-scripts */
'use client'
import { useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'

const initState = {
  code: '',
}

function Login() {
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState(null)
  const [state, setState] = useState(initState)

  const handleChange = e => {
    const { name, value } = e.target
    setState({ ...state, [name]: value })
  }

  useEffect(() => {
    const isLogin = async () => {
      const token = localStorage.getItem('psyart_23_token')
      try {
        const res = await fetch(
          //'http://localhost:3000/api/auth/me',
          'https://tgxnikermlhtifnztllogd4guy0avfhm.lambda-url.eu-central-1.on.aws/auth/me',
          //'/api/auth/me',
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        )
        res.ok ? (window.location.href = '/exclusive') : null
      } catch (error) {
        console.log(error)
      }
    }
    isLogin()
  }, [])

  async function onSubmit(event) {
    event.preventDefault()
    setIsLoading(true)
    setError(null) // Clear previous errors when a new request starts

    try {
      const response = await fetch(
        'https://tgxnikermlhtifnztllogd4guy0avfhm.lambda-url.eu-central-1.on.aws/auth/login',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ code: state.code }),
        }
      )
      if (!response.ok) {
        setError(
          'You entered the wrong code! Try again or contact the site administrator'
        )
        setTimeout(function () {
          location.reload()
        }, 4000)
      }

      const { token } = await response.json()
      localStorage.setItem('psyart_23_token', token)
      token ? (window.location.href = '/exclusive') : null
    } catch (error) {
      setError('Server error! Try again later')
      setTimeout(function () {
        location.reload()
      }, 4000)
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <section id='code' style={{ paddingTop: '80px', paddingBottom: '80px' }}>
        <div className='container'>
          <div className='row justify-content-center'>
            <div
              className='col-md-8'
              style={{
                borderRight: '1.5px solid black',
                borderLeft: '1.5px solid black',
              }}
            >
              <div className='row'>
                <p className='my-4 text-center text-capitalize contact text-muted lead font-weight-bold'>
                  If you do not have an access code, contact the site
                  administrator via
                  <Link href='mailto:psyhoprogramer@gmail.com' target='blank'>
                    {' '}
                    email
                  </Link>{' '}
                  or
                  <Link
                    href='https://www.instagram.com/psyart_23/'
                    target='blank'
                  >
                    {` `} Instagram
                  </Link>
                </p>
              </div>

              <div className='row'>
                <div className='card card-body my-4 bg-secondary'>
                  <div className='card-title text-center text-white'>
                    <h4 className='text-capitalize'>Input Access Code</h4>
                  </div>
                  <form id='loginForm' className='py-3'>
                    <div className='input-group my-3'>
                      <input
                        type='text'
                        name='code'
                        required
                        value={state.code}
                        onChange={handleChange}
                        className='form-control'
                        placeholder='Enter Access Code'
                      />
                    </div>
                    <button
                      type='submit'
                      className='btn btn-outline-light btn-block'
                      disabled={isLoading}
                      onClick={onSubmit}
                    >
                      {isLoading ? 'Loading...' : 'Submit'}
                    </button>
                  </form>
                </div>
              </div>
              {error && (
                <div id='wrongCode' className='text-center text-danger'>
                  <p className='text-center text-danger'>{error}</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>
    </>
  )
}

export default Login
